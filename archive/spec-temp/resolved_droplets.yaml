openapi: 3.0.0
info:
  title: DigitalOcean API
  version: "2.0"
  description: >
    The DigitalOcean API allows you to manage Droplets and resources within the
    DigitalOcean cloud in a simple, programmatic way using conventional HTTP
    requests.
  license:
    name: Apache 2.0
    url: "https://www.apache.org/licenses/LICENSE-2.0.html"
  contact:
    name: DigitalOcean API Team
    email: api-engineering@digitalocean.com
  termsOfService: "https://www.digitalocean.com/legal/terms-of-service-agreement/"
servers:
  - url: "https://api.digitalocean.com"
    description: production
tags:
  - name: Droplet Actions
    description: >-
      Droplet actions are tasks that can be executed on a Droplet. These can be
      things like rebooting, resizing, snapshotting, etc.

      Droplet action requests are generally targeted at one of the "actions"
      endpoints for a specific Droplet. The specific actions are usually
      initiated by sending a POST request with the action and arguments as
      parameters.

      Droplet action requests create a Droplet actions object, which can be used
      to get information about the status of an action. Creating a Droplet
      action is asynchronous: the HTTP call will return the action object before
      the action has finished processing on the Droplet. The current status of
      an action can be retrieved from either the Droplet actions endpoint or the
      global actions endpoint. If a Droplet action is uncompleted it may block
      the creation of a subsequent action for that Droplet, the locked attribute
      of the Droplet will be true and attempts to create a Droplet action will
      fail with a status of 422.
  - name: Droplets
    description: >-
      A [Droplet](https://www.digitalocean.com/docs/droplets/) is a DigitalOcean
      virtual machine. By sending requests to the Droplet endpoint, you can
      list, create, or delete Droplets.

      Some of the attributes will have an object value. The `region` and `image`
      objects will all contain the standard attributes of their associated
      types. Find more information about each of these objects in their
      respective sections.
paths:
  /v2/droplets:
    get:
      operationId: list_all_droplets
      summary: List All Droplets
      description: >
        To list all Droplets in your account, send a GET request to
        `/v2/droplets`.


        The response body will be a JSON object with a key of `droplets`. This
        will be

        set to an array containing objects each representing a Droplet. These
        will

        contain the standard Droplet attributes.


        ### Filtering Results by Tag


        It's possible to request filtered results by including certain query
        parameters.

        To only list Droplets assigned to a specific tag, include the `tag_name`
        query

        parameter set to the name of the tag in your GET request. For example,

        `/v2/droplets?tag_name=$TAG_NAME`.
      tags:
        - Droplets
      parameters:
        - $ref: "#/components/parameters/per_page"
        - $ref: "#/components/parameters/page"
        - $ref: "#/components/parameters/droplet_tag_name"
      responses:
        "200":
          $ref: "#/components/responses/all_droplets"
        "401":
          $ref: "#/components/responses/unauthorized"
        "429":
          $ref: "#/components/responses/too_many_requests"
        "500":
          $ref: "#/components/responses/server_error"
        # default:
        #   $ref: '#/components/responses/unexpected_error'
      x-codeSamples:
        - lang: cURL
          source: |-
            curl -X GET \
              -H "Content-Type: application/json" \
              -H "Authorization: Bearer $DIGITALOCEAN_TOKEN" \
              "https://api.digitalocean.com/v2/droplets?page=1&per_page=1"
        - lang: Go
          source: |-
            import (
                "context"
                "os"

                "github.com/digitalocean/godo"
            )

            func main() {
                token := os.Getenv("DIGITALOCEAN_TOKEN")

                client := godo.NewFromToken(token)
                ctx := context.TODO()

                opt := &godo.ListOptions{
                    Page:    1,
                    PerPage: 200,
                }

                droplets, _, err := client.Droplets.List(ctx, opt)
            }
        - lang: Ruby
          source: |-
            require 'droplet_kit'
            token = ENV['DIGITALOCEAN_TOKEN']
            client = DropletKit::Client.new(access_token: token)

            droplets = client.droplets.all
            droplets.each
    post:
      operationId: create_droplet
      summary: Create a New Droplet
      description: >
        To create a new Droplet, send a POST request to `/v2/droplets` setting
        the

        required attributes.


        A Droplet will be created using the provided information. The response
        body

        will contain a JSON object with a key called `droplet`. The value will
        be an

        object containing the standard attributes for your new Droplet. The
        response

        code, 202 Accepted, does not indicate the success or failure of the
        operation,

        just that the request has been accepted for processing. The `actions`
        returned

        as part of the response's `links` object can be used to check the status

        of the Droplet create event.


        ### Create Multiple Droplets


        Creating multiple Droplets is very similar to creating a single Droplet.

        Instead of sending `name` as a string, send `names` as an array of
        strings. A

        Droplet will be created for each name you send using the associated

        information. Up to ten Droplets may be created this way at a time.


        Rather than returning a single Droplet, the response body will contain a
        JSON

        array with a key called `droplets`. This will be set to an array of JSON

        objects, each of which will contain the standard Droplet attributes. The

        response code, 202 Accepted, does not indicate the success or failure of
        any

        operation, just that the request has been accepted for processing. The
        array

        of `actions` returned as part of the response's `links` object can be
        used to

        check the status of each individual Droplet create event.
      tags:
        - Droplets
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/droplet_single_create"
              # oneOf:
              #   - $ref: "#/components/schemas/droplet_single_create"
              #   - $ref: "#/components/schemas/droplet_multi_create"
            examples:
              Single Droplet Create Request:
                $ref: "#/components/examples/droplet_create_request"
              Multiple Droplet Create Request:
                $ref: "#/components/examples/droplet_multi_create_request"
      responses:
        "202":
          $ref: "#/components/responses/droplet_create"
        "401":
          $ref: "#/components/responses/unauthorized"
        "429":
          $ref: "#/components/responses/too_many_requests"
        "500":
          $ref: "#/components/responses/server_error"
        # default:
        #   $ref: '#/components/responses/unexpected_error'
      x-codeSamples:
        - lang: cURL
          source: |-
            curl -X POST \
              -H "Content-Type: application/json" \
              -H "Authorization: Bearer $DIGITALOCEAN_TOKEN" \
              -d '{"name":"example.com","region":"nyc3","size":"s-1vcpu-1gb","image":"ubuntu-16-04-x64","ssh_keys":[107149],"backups":false,"ipv6":true,"user_data":null,"private_networking":null,"volumes": null,"tags":["web"]}' \
              "https://api.digitalocean.com/v2/droplets"
        - lang: Go
          source: |-
            import (
                "context"
                "os"

                "github.com/digitalocean/godo"
            )

            func main() {
                token := os.Getenv("DIGITALOCEAN_TOKEN")

                client := godo.NewFromToken(token)
                ctx := context.TODO()

                createRequest := &godo.DropletCreateRequest{
                    Name:   "example.com",
                    Region: "nyc3",
                    Size:   "s-1vcpu-1gb",
                    Image: godo.DropletCreateImage{
                        Slug: "ubuntu-16-04-x64",
                    },
                    SSHKeys: []godo.DropletCreateSSHKey{
                        godo.DropletCreateSSHKey{ID: 107149},
                    },
                    IPv6: true,
                    Tags: []string{"web"},
                }
            }
        - lang: Ruby
          source: |-
            require 'droplet_kit'
            token = ENV['DIGITALOCEAN_TOKEN']
            client = DropletKit::Client.new(access_token: token)

            droplet = DropletKit::Droplet.new(
              name: 'example.com',
              region: 'nyc3',
              size: 's-1vcpu-1gb',
              image: 'ubuntu-16-04-x64',
              ssh_keys: [107149],
              ipv6: true,
              tags: ["web"]
            )
            client.droplets.create(droplet)
    delete:
      operationId: destroy_droplets_by_tag
      summary: Deleting Droplets by Tag
      description: >
        To delete **all** Droplets assigned to a specific tag, include the
        `tag_name`

        query parameter set to the name of the tag in your DELETE request. For

        example,  `/v2/droplets?tag_name=$TAG_NAME`.


        A successful request will receive a 204 status code with no body in
        response.

        This indicates that the request was processed successfully.
      tags:
        - Droplets
      parameters:
        - $ref: "#/components/parameters/droplet_delete_tag_name"
      responses:
        "204":
          $ref: "#/components/responses/no_content"
        "401":
          $ref: "#/components/responses/unauthorized"
        "404":
          $ref: "#/components/responses/not_found"
        "429":
          $ref: "#/components/responses/too_many_requests"
        "500":
          $ref: "#/components/responses/server_error"
        # default:
        #   $ref: '#/components/responses/unexpected_error'
      x-codeSamples:
        - lang: cURL
          source: |-
            curl -X DELETE \
              -H "Content-Type: application/json" \
              -H "Authorization: Bearer $DIGITALOCEAN_TOKEN" \
              "https://api.digitalocean.com/v2/droplets?tag_name=awesome"
        - lang: Go
          source: |-
            import (
                "context"
                "os"

                "github.com/digitalocean/godo"
            )

            func main() {
                token := os.Getenv("DIGITALOCEAN_TOKEN")

                client := godo.NewFromToken(token)
                ctx := context.TODO()

                client.Droplets.DeleteByTag(ctx, "awesome") 
            }
        - lang: Ruby
          source: |-
            require 'droplet_kit'
            token = ENV['DIGITALOCEAN_TOKEN']
            client = DropletKit::Client.new(access_token: token)

            client.droplets.delete_for_tag(tag_name: awesome)
  "/v2/droplets/{droplet_id}":
    get:
      operationId: get_droplet
      summary: Retrieve an Existing Droplet
      description: |
        To show information about an individual Droplet, send a GET request to
        `/v2/droplets/$DROPLET_ID`.
      tags:
        - Droplets
      parameters:
        - $ref: "#/components/parameters/droplet_id"
      responses:
        "200":
          $ref: "#/components/responses/existing_droplet"
        "401":
          $ref: "#/components/responses/unauthorized"
        "404":
          $ref: "#/components/responses/not_found"
        "429":
          $ref: "#/components/responses/too_many_requests"
        "500":
          $ref: "#/components/responses/server_error"
        # default:
        #   $ref: '#/components/responses/unexpected_error'
      x-codeSamples:
        - lang: cURL
          source: |-
            curl -X GET \
              -H "Content-Type: application/json" \
              -H "Authorization: Bearer $DIGITALOCEAN_TOKEN" \
              "https://api.digitalocean.com/v2/droplets/3164494"
        - lang: Go
          source: |-
            import (
                "context"
                "os"

                "github.com/digitalocean/godo"
            )

            func main() {
                token := os.Getenv("DIGITALOCEAN_TOKEN")

                client := godo.NewFromToken(token)
                ctx := context.TODO()

                droplet, _, err := client.Droplets.Get(ctx, 3164494)
            }
        - lang: Ruby
          source: |-
            require 'droplet_kit'
            token = ENV['DIGITALOCEAN_TOKEN']
            client = DropletKit::Client.new(access_token: token)

            client.droplets.find(id: 3164494)
    delete:
      operationId: destroy_droplet
      summary: Delete an Existing Droplet
      description: >
        To delete a Droplet, send a DELETE request to
        `/v2/droplets/$DROPLET_ID`.


        A successful request will receive a 204 status code with no body in
        response.

        This indicates that the request was processed successfully.
      tags:
        - Droplets
      parameters:
        - $ref: "#/components/parameters/droplet_id"
      responses:
        "204":
          $ref: "#/components/responses/no_content"
        "401":
          $ref: "#/components/responses/unauthorized"
        "404":
          $ref: "#/components/responses/not_found"
        "429":
          $ref: "#/components/responses/too_many_requests"
        "500":
          $ref: "#/components/responses/server_error"
        # default:
        #   $ref: '#/components/responses/unexpected_error'
      x-codeSamples:
        - lang: cURL
          source: |-
            curl -X DELETE \
              -H "Content-Type: application/json" \
              -H "Authorization: Bearer $DIGITALOCEAN_TOKEN" \
              "https://api.digitalocean.com/v2/droplets/3164494"
        - lang: Go
          source: |-
            import (
                "context"
                "os"

                "github.com/digitalocean/godo"
            )

            func main() {
                token := os.Getenv("DIGITALOCEAN_TOKEN")

                client := godo.NewFromToken(token)
                ctx := context.TODO()

                _, err := client.Droplets.Delete(ctx, 3164494)
            }
        - lang: Ruby
          source: |-
            require 'droplet_kit'
            token = ENV['DIGITALOCEAN_TOKEN']
            client = DropletKit::Client.new(access_token: token)

            client.droplets.delete(id: 3164494)
  "/v2/droplets/{droplet_id}/backups":
    get:
      operationId: list_droplet_backups
      summary: List Backups for a Droplet
      description: >
        To retrieve any backups associated with a Droplet, send a GET request to

        `/v2/droplets/$DROPLET_ID/backups`.


        You will get back a JSON object that has a `backups` key. This will be
        set to

        an array of backup objects, each of which contain the standard

        Droplet backup attributes.
      tags:
        - Droplets
      parameters:
        - $ref: "#/components/parameters/droplet_id"
        - $ref: "#/components/parameters/per_page"
        - $ref: "#/components/parameters/page"
      responses:
        "200":
          $ref: "#/components/responses/all_droplet_backups"
        "401":
          $ref: "#/components/responses/unauthorized"
        "404":
          $ref: "#/components/responses/not_found"
        "429":
          $ref: "#/components/responses/too_many_requests"
        "500":
          $ref: "#/components/responses/server_error"
        # default:
        #   $ref: '#/components/responses/unexpected_error'
      x-codeSamples:
        - lang: cURL
          source: |-
            curl -X GET \
              -H "Content-Type: application/json" \
              -H "Authorization: Bearer $DIGITALOCEAN_TOKEN" \
              "https://api.digitalocean.com/v2/droplets/3067509/backups"
        - lang: Go
          source: |-
            import (
                "context"
                "os"

                "github.com/digitalocean/godo"
            )

            func main() {
                token := os.Getenv("DIGITALOCEAN_TOKEN")

                client := godo.NewFromToken(token)
                ctx := context.TODO()

                opt := &godo.ListOptions{
                    Page:    1,
                    PerPage: 200,
                }

                backups, _, err := client.Droplets.Backups(ctx, 3164494, opt)
            }
        - lang: Ruby
          source: |-
            require 'droplet_kit'
            token = ENV['DIGITALOCEAN_TOKEN']
            client = DropletKit::Client.new(access_token: token)

            backups = client.droplets.backups(id: 3164494)
            backups.each
  "/v2/droplets/{droplet_id}/snapshots":
    get:
      operationId: list_droplet_snapshots
      summary: List Snapshots for a Droplet
      description: >
        To retrieve the snapshots that have been created from a Droplet, send a
        GET

        request to `/v2/droplets/$DROPLET_ID/snapshots`.


        You will get back a JSON object that has a `snapshots` key. This will be
        set

        to an array of snapshot objects, each of which contain the standard
        Droplet

        snapshot attributes.
      tags:
        - Droplets
      parameters:
        - $ref: "#/components/parameters/droplet_id"
        - $ref: "#/components/parameters/per_page"
        - $ref: "#/components/parameters/page"
      responses:
        "200":
          $ref: "#/components/responses/all_droplet_snapshots"
        "401":
          $ref: "#/components/responses/unauthorized"
        "404":
          $ref: "#/components/responses/not_found"
        "429":
          $ref: "#/components/responses/too_many_requests"
        "500":
          $ref: "#/components/responses/server_error"
        # default:
        #   $ref: '#/components/responses/unexpected_error'
      x-codeSamples:
        - lang: cURL
          source: |-
            curl -X GET \
              -H "Content-Type: application/json" \
              -H "Authorization: Bearer $DIGITALOCEAN_TOKEN" \
              "https://api.digitalocean.com/v2/droplets/3164494/snapshots?page=1&per_page=1"
        - lang: Go
          source: |-
            import (
                "context"
                "os"

                "github.com/digitalocean/godo"
            )

            func main() {
                token := os.Getenv("DIGITALOCEAN_TOKEN")

                client := godo.NewFromToken(token)
                ctx := context.TODO()

                opt := &godo.ListOptions{
                    Page:    1,
                    PerPage: 200,
                }

                snapshots, _, err := client.Droplets.Snapshots(ctx, 3164494, opt)
            }
        - lang: Ruby
          source: |-
            require 'droplet_kit'
            token = ENV['DIGITALOCEAN_TOKEN']
            client = DropletKit::Client.new(access_token: token)

            snapshots = client.droplets.snapshots(id: 3164494)
            snapshots.each
  "/v2/droplets/{droplet_id}/actions":
    get:
      operationId: list_droplet_actions
      summary: List Actions for a Droplet
      description: >
        To retrieve a list of all actions that have been executed for a Droplet,
        send

        a GET request to `/v2/droplets/$DROPLET_ID/actions`.


        The results will be returned as a JSON object with an `actions` key.
        This will

        be set to an array filled with `action` objects containing the standard

        `action` attributes.
      tags:
        - Droplet Actions
      parameters:
        - $ref: "#/components/parameters/droplet_id"
        - $ref: "#/components/parameters/per_page"
        - $ref: "#/components/parameters/page"
      responses:
        "200":
          $ref: "#/components/responses/all_droplet_actions"
        "401":
          $ref: "#/components/responses/unauthorized"
        "404":
          $ref: "#/components/responses/not_found"
        "429":
          $ref: "#/components/responses/too_many_requests"
        "500":
          $ref: "#/components/responses/server_error"
        # default:
        #   $ref: '#/components/responses/unexpected_error'
      x-codeSamples:
        - lang: cURL
          source: |-
            curl -X GET \
              -H "Content-Type: application/json" \
              -H "Authorization: Bearer $DIGITALOCEAN_TOKEN" \
              "https://api.digitalocean.com/v2/droplets/3164494/actions?page=1&per_page=1"
        - lang: Go
          source: |-
            import (
                "context"
                "os"

                "github.com/digitalocean/godo"
            )

            func main() {
                token := os.Getenv("DIGITALOCEAN_TOKEN")

                client := godo.NewFromToken(token)
                ctx := context.TODO()

                opt := &godo.ListOptions{
                    Page:    1,
                    PerPage: 200,
                }

                actions, _, err := client.Droplets.Actions(ctx, 3164494, opt)
            }
        - lang: Ruby
          source: |-
            require 'droplet_kit'
            token = ENV['DIGITALOCEAN_TOKEN']
            client = DropletKit::Client.new(access_token: token)

            actions = client.droplets.actions(id: 3164494)
            actions.each
    post:
      operationId: post_droplet_action
      summary: Initiate a Droplet Action
      description: >
        To initiate an action on a Droplet send a POST request to

        `/v2/droplets/$DROPLET_ID/actions`. In the JSON body to the request,

        set the `type` attribute to on of the supported action types:


        | Action                                   | Details |

        | ---------------------------------------- | ----------- |

        | <nobr>`enable_backups`</nobr>            | Enables backups for a
        Droplet |

        | <nobr>`disable_backups`</nobr>           | Disables backups for a
        Droplet |

        | <nobr>`reboot`</nobr>                    | Reboots a Droplet. A
        `reboot` action is an attempt to reboot the Droplet in a graceful way,
        similar to using the `reboot` command from the console. |

        | <nobr>`power_cycle`</nobr>               | Power cycles a Droplet. A
        `powercycle` action is similar to pushing the reset button on a physical
        machine, it's similar to booting from scratch. |

        | <nobr>`shutdown`</nobr>                  | Shutsdown a Droplet. A
        shutdown action is an attempt to shutdown the Droplet in a graceful way,
        similar to using the `shutdown` command from the console. Since a
        `shutdown` command can fail, this action guarantees that the command is
        issued, not that it succeeds. The preferred way to turn off a Droplet is
        to attempt a shutdown, with a reasonable timeout, followed by a
        `power_off` action to ensure the Droplet is off. |

        | <nobr>`power_off`</nobr>                 | Powers off a Droplet. A
        `power_off` event is a hard shutdown and should only be used if the
        `shutdown` action is not successful. It is similar to cutting the power
        on a server and could lead to complications. |

        | <nobr>`power_on`</nobr>                  | Powers on a Droplet. |

        | <nobr>`restore`</nobr>                   | Restore a Droplet using a
        backup image. The image ID that is passed in must be a backup of the
        current Droplet instance. The operation will leave any embedded SSH keys
        intact. |

        | <nobr>`password_reset`</nobr>            | Resets the root password
        for a Droplet. A new password will be provided via email. It must be
        changed after first use. |

        | <nobr>`resize`</nobr>                    | Resizes a Droplet. Set the
        `size` attribute to a size slug. If a permanent resize with disk changes
        included is desired, set the `disk` attribute to `true`. |

        | <nobr>`rebuild`</nobr>                   | Rebuilds a Droplet from a
        new base image. Set the `image` attribute to an image ID or slug. |

        | <nobr>`rename`</nobr>                    | Renames a Droplet. |

        | <nobr>`change_kernel`</nobr>             | Changes a Droplet's kernel.
        Only applies to Droplets with externally managed kernels. All Droplets
        created after March 2017 use internal kernels by default. |

        | <nobr>`enable_ipv6`</nobr>               | Enables IPv6 for a Droplet.
        |

        | <nobr>`snapshot`</nobr>                  | Takes a snapshot of a
        Droplet. |
      tags:
        - Droplet Actions
      parameters:
        - in: path
          name: droplet_id
          description: >
            A unique number (id) or string (slug) used to identify and reference
            a

            specific droplet.
          required: true
          schema:
            oneOf:
              - type: integer
              - type: string
          examples:
            byId:
              summary: Retrieve an existing droplet
              value: 62137902
      requestBody:
        description: >
          The `type` attribute set in the request body will specify the  action
          that

          will be taken on the Droplet. Some actions will require additional

          attributes to be set as well.
        content:
          application/json:
            schema:
              oneOf:
                - $ref: "#/components/schemas/droplet_action_type_enum"
                - $ref: "#/components/schemas/droplet_action_restore"
                - $ref: "#/components/schemas/droplet_action_resize"
                - $ref: "#/components/schemas/droplet_action_rebuild"
                - $ref: "#/components/schemas/droplet_action_rename"
                - $ref: "#/components/schemas/droplet_action_change_kernel"
                - $ref: "#/components/schemas/droplet_action_snapshot"
              discriminator:
                propertyName: type
                mapping:
                  enable_backups: "#/components/schemas/droplet_action_type_enum"
                  disable_backups: "#/components/schemas/droplet_action_type_enum"
                  reboot: "#/components/schemas/droplet_action_type_enum"
                  power_cycle: "#/components/schemas/droplet_action_type_enum"
                  shutdown: "#/components/schemas/droplet_action_type_enum"
                  power_off: "#/components/schemas/droplet_action_type_enum"
                  power_on: "#/components/schemas/droplet_action_type_enum"
                  password_reset: "#/components/schemas/droplet_action_type_enum"
                  restore: "#/components/schemas/droplet_action_restore"
                  resize: "#/components/schemas/droplet_action_resize"
                  rebuild: "#/components/schemas/droplet_action_rebuild"
                  rename: "#/components/schemas/droplet_action_rename"
                  change_kernel: "#/components/schemas/droplet_action_change_kernel"
                  enable_ipv6: "#/components/schemas/droplet_action_type_enum"
                  snapshot: "#/components/schemas/droplet_action_snapshot"
      responses:
        "201":
          $ref: "#/components/responses/droplet_action"
        "401":
          $ref: "#/components/responses/unauthorized"
        "404":
          $ref: "#/components/responses/not_found"
        "429":
          $ref: "#/components/responses/too_many_requests"
        "500":
          $ref: "#/components/responses/server_error"
        # default:
        #   $ref: '#/components/responses/unexpected_error'
      x-codeSamples:
        - lang: cURL
          source: |-
            # Enable Backups
            curl -X POST \
              -H "Content-Type: application/json" \
              -H "Authorization: Bearer $DIGITALOCEAN_TOKEN" \
              -d '{"type":"enable_backups"}' \
              "https://api.digitalocean.com/v2/droplets/3164450/actions"

            # Disable Backups
            curl -X POST \
              -H "Content-Type: application/json" \
              -H "Authorization: Bearer $DIGITALOCEAN_TOKEN" \
              -d '{"type":"disable_backups"}' \
              "https://api.digitalocean.com/v2/droplets/3164450/actions"

            # Reboot a Droplet
            curl -X POST \
              -H "Content-Type: application/json" \
              -H "Authorization: Bearer $DIGITALOCEAN_TOKEN" \
              -d '{"type":"reboot"}' \
              "https://api.digitalocean.com/v2/droplets/3164450/actions"

            # Power cycle a Droplet
            curl -X POST \
              -H "Content-Type: application/json" \
              -H "Authorization: Bearer $DIGITALOCEAN_TOKEN" \
              -d '{"type":"power_cycle"}' \
              "https://api.digitalocean.com/v2/droplets/3164450/actions"

            # Shutdown and Droplet
            curl -X POST \
              -H "Content-Type: application/json" \
              -H "Authorization: Bearer $DIGITALOCEAN_TOKEN" \
              -d '{"type":"shutdown"}' \
              "https://api.digitalocean.com/v2/droplets/3067649/actions"

            # Power off a Droplet
            curl -X POST \
              -H "Content-Type: application/json" \
              -H "Authorization: Bearer $DIGITALOCEAN_TOKEN" \
              -d '{"type":"power_off"}' \
              "https://api.digitalocean.com/v2/droplets/3164450/actions"

            # Power on a Droplet
            curl -X POST \
              -H "Content-Type: application/json" \
              -H "Authorization: Bearer $DIGITALOCEAN_TOKEN" \
              -d '{"type":"power_on"}' \
              "https://api.digitalocean.com/v2/droplets/3164450/actions"

            # Restore a Droplet
            curl -X POST \
              -H "Content-Type: application/json" \
              -H "Authorization: Bearer $DIGITALOCEAN_TOKEN" \
              -d '{"type":"restore", "image": 12389723 }' \
              "https://api.digitalocean.com/v2/droplets/3067649/actions"

            # Password Reset a Droplet
            curl -X POST \
              -H "Content-Type: application/json" \
              -H "Authorization: Bearer $DIGITALOCEAN_TOKEN" \
              -d '{"type":"password_reset"}' \
              "https://api.digitalocean.com/v2/droplets/3164450/actions"

            # Resize a Droplet
            curl -X POST \
              -H "Content-Type: application/json" \
              -H "Authorization: Bearer $DIGITALOCEAN_TOKEN" \
              -d '{"type":"resize","size":"1gb"}' \
              "https://api.digitalocean.com/v2/droplets/3164450/actions"

            # Rebuild a Droplet
            curl -X POST \
              -H "Content-Type: application/json" \
              -H "Authorization: Bearer $DIGITALOCEAN_TOKEN" \
              -d '{"type":"rebuild","image":"ubuntu-16-04-x64"}' \
              "https://api.digitalocean.com/v2/droplets/3164450/actions"

            # Rename a Droplet
            curl -X POST \
              -H "Content-Type: application/json" \
              -H "Authorization: Bearer $DIGITALOCEAN_TOKEN" \
              -d '{"type":"rename","name":"nifty-new-name"}' \
              "https://api.digitalocean.com/v2/droplets/3164450/actions"

            # Change the Kernel
            curl -X POST \
              -H "Content-Type: application/json" \
              -H "Authorization: Bearer $DIGITALOCEAN_TOKEN" \
              -d '{"type":"change_kernel","kernel":991}' \
              "https://api.digitalocean.com/v2/droplets/3164450/actions"

            # Enable IPv6
            curl -X POST \
              -H "Content-Type: application/json" \
              -H "Authorization: Bearer $DIGITALOCEAN_TOKEN" \
              -d '{"type":"enable_ipv6"}' \
              "https://api.digitalocean.com/v2/droplets/3164450/actions"

            # Enable Private Networking
            curl -X POST \
              -H "Content-Type: application/json" \
              -H "Authorization: Bearer $DIGITALOCEAN_TOKEN" \
              -d '{"type":"enable_private_networking"}' \
              "https://api.digitalocean.com/v2/droplets/3164450/actions"

            # Snapshot a Droplet
            curl -X POST \
              -H "Content-Type: application/json" \
              -H "Authorization: Bearer $DIGITALOCEAN_TOKEN" \
              -d '{"type":"snapshot","name":"Nifty New Snapshot"}' \
              "https://api.digitalocean.com/v2/droplets/3164450/actions"

            # Acting on Tagged Droplets
            curl -X POST \
              -H "Content-Type: application/json" \
              -H "Authorization: Bearer $DIGITALOCEAN_TOKEN" \
              -d '{"type":"enable_backups"}' \
              "https://api.digitalocean.com/v2/droplets/actions?tag_name=awesome"

            # Retrieve a Droplet Action
            curl -X GET \
              -H "Content-Type: application/json" \
              -H "Authorization: Bearer $DIGITALOCEAN_TOKEN" \
              "https://api.digitalocean.com/v2/droplets/3164444/actions/36804807"
        - lang: Go
          source: >-
            import (
                "context"
                "os"

                "github.com/digitalocean/godo"
            )


            func main() {
                token := os.Getenv("DIGITALOCEAN_TOKEN")

                client := godo.NewFromToken(token)
                ctx := context.TODO()
            // Enable Backups
                action, _, err := client.DropletActions.EnableBackups(ctx, 3164450)

            // Disable Backups

            //  action, _, err := client.DropletActions.DisableBackups(ctx,
            3164450)


            // Reboot a Droplet

            //  action, _, err := client.DropletActions.Reboot(ctx, 3164450)


            // Power Cycle a Droplet

            //  action, _, err := client.DropletActions.PowerCycle(ctx, 3164450)


            // Shutdown a Droplet

            //  action, _, err := client.DropletActions.Shutdown(ctx, 3067649)


            // Power Off a Droplet

            //  action, _, err := client.DropletActions.PowerOff(ctx, 3164450)


            // Power On a Droplet

            //  action, _, err := client.DropletActions.PowerOn(ctx, 3164450)


            // Restore a Droplet

            //  action, _, err := client.DropletActions.Restore(ctx, 3164449,
            12389723)


            // Password Reset a Droplet

            //  action, _, err := client.DropletActions.PasswordReset(ctx,
            3164450)


            // Resize a Droplet

            //  action, _, err := client.DropletActions.Resize(ctx, 3164450,
            "1gb", true)


            // Rebuild a Droplet

            //  action, _, err := client.DropletActions.RebuildByImageSlug(ctx,
            3164450, "ubuntu-16-04-x64")


            // Rename a Droplet

            //  action, _, err := client.DropletActions.Rename(ctx, 3164450,
            "nifty-new-name")


            // Change the Kernel

            //  action, _, err := client.DropletActions.ChangeKernel(ctx,
            3164450, 991)


            // Enable IPv6

            //  action, _, err := client.DropletActions.EnableIPv6(ctx, 3164450)


            // Enable Private Networking

            //  action, _, err :=
            client.DropletActions.EnablePrivateNetworking(ctx, 3164450)


            // Snapshot a Droplet

            //  action, _, err := client.DropletActions.Snapshot(ctx, 3164450,
            "Nifty New Snapshot")


            // Retrieve a Droplet Action

            //  action, _, err := client.DropletActions.Get(ctx, 3164450,
            36804807)


            }
        - lang: Ruby
          source: >-
            require 'droplet_kit'

            token = ENV['DIGITALOCEAN_TOKEN']

            client = DropletKit::Client.new(access_token: token)


            # Enable Backups

            client.droplet_actions.enable_backups(droplet_id: 3164450)


            # Disable Backups

            # client.droplet_actions.disable_backups(droplet_id: 3164450)


            # Reboot a Droplet

            # client.droplet_actions.reboot(droplet_id: 3164450)


            # Power Cycle a Droplet

            # client.droplet_actions.power_cycle(droplet_id: 3164450)


            # Shutdown a Droplet

            # client.droplet_actions.shutdown(droplet_id: 3067649)


            # Power Off a Droplet

            # client.droplet_actions.power_off(droplet_id: 3164450)


            # Power On a Droplet

            # client.droplet_actions.power_on(droplet_id: 3164450)


            # Restore a Droplet

            # client.droplet_actions.restore(droplet_id: 3067649, image:
            12389723)


            # Password Reset a Droplet

            # client.droplet_actions.password_reset(droplet_id: 3164450)


            # Resize a Droplet

            # client.droplet_actions.resize(droplet_id: 3164450, size: '1gb')


            # Rebuild a Droplet

            # client.droplet_actions.rebuild(droplet_id: 3164450, image:
            'ubuntu-16-04-x64')


            # Rename a Droplet

            # client.droplet_actions.rename(droplet_id: 3164450, name:
            'nifty-new-name')


            # Change the Kernel

            # client.droplet_actions.change_kernel(droplet_id: 3164450, kernel:
            991)


            # Enable IPv6

            # client.droplet_actions.enable_ipv6(droplet_id: 3164450)


            # Enable Private Networking

            # client.droplet_actions.enable_private_networking(droplet_id:
            3164450)


            # Snapshot a Droplet

            # client.droplet_actions.snapshot(droplet_id: 3164450, name: 'Nifty
            New Snapshot')
components:
  securitySchemes:
    bearer_auth:
      type: http
      scheme: bearer
  parameters:
    per_page:
      in: query
      name: per_page
      required: false
      description: Number of items returned per page
      schema:
        type: integer
        minimum: 1
        default: 20
        maximum: 200
      example: 2
    page:
      in: query
      name: page
      required: false
      description: Which 'page' of paginated results to return.
      schema:
        type: integer
        minimum: 1
        default: 1
      example: 1
    droplet_tag_name:
      in: query
      name: tag_name
      description: Used to filter Droplets by a specific tag.
      required: false
      schema:
        type: string
      example: "env:prod"
    droplet_delete_tag_name:
      in: query
      name: tag_name
      description: Specifies Droplets to be deleted by tag.
      required: true
      schema:
        type: string
      example: "env:test"
    droplet_id:
      in: path
      name: droplet_id
      description: A unique identifier for a Droplet instance.
      required: true
      schema:
        type: integer
        minimum: 1
      example: 3164444
  headers:
    ratelimit-limit:
      schema:
        type: integer
      example: 5000
      description: >-
        The default limit on number of requests that can be made per hour and
        per minute. Current rate limits are 5000 requests per hour and 250
        requests per minute.
    ratelimit-remaining:
      schema:
        type: integer
      example: 4816
      description: >-
        The number of requests in your hourly quota that remain before you hit
        your request limit. See
        https://developers.digitalocean.com/documentation/v2/#rate-limit for
        information about how requests expire.
    ratelimit-reset:
      schema:
        type: integer
      example: 1444931833
      description: >-
        The time when the oldest request will expire. The value is given in Unix
        epoch time. See
        https://developers.digitalocean.com/documentation/v2/#rate-limit for
        information about how requests expire.
  schemas:
    error:
      type: object
      properties:
        id:
          description: >-
            A short identifier corresponding to the HTTP status code returned.
            For  example, the ID for a response returning a 404 status code
            would be "not_found."
          type: string
          example: not_found
        message:
          description: >-
            A message providing additional information about the error,
            including  details to help resolve it when possible.
          type: string
          example: The resource you were accessing could not be found.
        request_id:
          description: >-
            Optionally, some endpoints may include a request ID that should be 
            provided when reporting bugs or opening support tickets to help 
            identify the issue.
          type: string
          example: 4d9d8375-3c56-4925-a3e7-eb137fed17e9
      required:
        - id
        - message
    kernel:
      type: object
      description: >
        **Note**: All Droplets created after March 2017 use internal kernels by
        default.

        These Droplets will have this attribute set to `null`.


        The current
        [kernel](https://www.digitalocean.com/docs/droplets/how-to/kernel/)

        for Droplets with externally managed kernels. This will initially be set
        to

        the kernel of the base image when the Droplet is created.
      nullable: true
      deprecated: true
      properties:
        id:
          type: integer
          example: 7515
          description: A unique number used to identify and reference a specific kernel.
        name:
          type: string
          example: DigitalOcean GrubLoader v0.2 (20160714)
          description: >-
            The display name of the kernel. This is shown in the web UI and is
            generally a descriptive title for the kernel in question.
        version:
          type: string
          example: 2016.07.13-DigitalOcean_loader_Ubuntu
          description: >-
            A standard kernel version string representing the version, patch,
            and release information.
    image_name:
      type: string
      description: >-
        The display name that has been given to an image.  This is what is shown
        in the control panel and is generally a descriptive title for the image
        in question.
      example: Nifty New Snapshot
    distribution:
      type: string
      description: >-
        The name of a custom image's distribution. Currently, the valid values
        are  "Arch Linux", "CentOS", "CoreOS", "Debian", "Fedora", "Fedora
        Atomic",  "FreeBSD", "Gentoo", "openSUSE", "RancherOS", "Ubuntu", and
        "Unknown".  Any other value will be accepted but ignored, and "Unknown"
        will be used in its place.
      enum:
        - Arch Linux
        - CentOS
        - CoreOS
        - Debian
        - Fedora
        - Fedora Atomic
        - FreeBSD
        - Gentoo
        - openSUSE
        - RancherOS
        - Ubuntu
        - Unknown
      example: Ubuntu
    region_slug:
      type: string
      description: >-
        The slug identifier for the region where the resource will initially be 
        available.
      enum:
        - ams1
        - ams2
        - ams3
        - blr1
        - fra1
        - lon1
        - nyc1
        - nyc2
        - nyc3
        - sfo1
        - sfo2
        - sfo3
        - sgp1
        - tor1
      example: nyc3
    regions_array:
      type: array
      items:
        $ref: "#/components/schemas/region_slug"
      description: >-
        This attribute is an array of the regions that the image is available
        in. The regions are represented by their identifying slug values.
      example:
        - nyc1
        - nyc2
    image_description:
      type: string
      description: An optional free-form text field to describe an image.
      example: " "
    tags_array:
      type: array
      items:
        type: string
      description: >-
        A flat array of tag names as strings to be applied to the resource. Tag
        names may be for either existing or new tags.
      example:
        - base-image
        - prod
    image:
      type: object
      properties:
        id:
          type: integer
          description: >-
            A unique number that can be used to identify and reference a
            specific image.
          example: 7555620
          readOnly: true
        name:
          $ref: "#/components/schemas/image_name"
        type:
          type: string
          description: >-
            Describes the kind of image. It may be one of "snapshot", "backup",
            or "custom". This specifies whether an image is a user-generated
            Droplet snapshot, automatically created Droplet backup, or a
            user-provided virtual machine image.
          enum:
            - base
            - snapshot
            - backup
            - custom
          example: snapshot
        distribution:
          $ref: "#/components/schemas/distribution"
        slug:
          type: string
          nullable: true
          description: >-
            A uniquely identifying string that is associated with each of the
            DigitalOcean-provided public images. These can be used to reference
            a public image as an alternative to the numeric id.
          example: nifty1
        public:
          type: boolean
          description: >-
            This is a boolean value that indicates whether the image in question
            is public or not. An image that is public is available to all
            accounts. A non-public image is only accessible from your account.
          example: true
        regions:
          $ref: "#/components/schemas/regions_array"
        created_at:
          type: string
          format: date-time
          description: >-
            A time value given in ISO8601 combined date and time format that
            represents when the image was created.
          example: 2020-05-04T22:23:02.000Z
        min_disk_size:
          type: integer
          description: >-
            The minimum disk size in GB required for a Droplet to use this
            image.
          example: 20
          minimum: 0
        size_gigabytes:
          type: number
          format: float
          description: The size of the image in gigabytes.
          example: 2.34
        description:
          $ref: "#/components/schemas/image_description"
        tags:
          $ref: "#/components/schemas/tags_array"
        status:
          type: string
          description: >-
            A status string indicating the state of a custom image. This may be
            `NEW`,
             `available`, `pending`, `deleted`, or `retired`.
          enum:
            - NEW
            - available
            - pending
            - deleted
            - retired
          example: NEW
        error_message:
          type: string
          description: >-
            A string containing information about errors that may occur when
            importing
             a custom image.
          example: " "
    size:
      type: object
      properties:
        slug:
          type: string
          example: s-1vcpu-1gb
          description: A human-readable string that is used to uniquely identify each size.
        memory:
          type: integer
          multipleOf: 8
          minimum: 8
          example: 1024
          description: >-
            The amount of RAM allocated to Droplets created of this size. The
            value is represented in megabytes.
        vcpus:
          type: integer
          example: 1
          description: The integer of number CPUs allocated to Droplets of this size.
        disk:
          type: integer
          example: 25
          description: >-
            The amount of disk space set aside for Droplets of this size. The
            value is represented in gigabytes.
        transfer:
          type: number
          format: float
          example: 1
          description: >-
            The amount of transfer bandwidth that is available for Droplets
            created in this size. This only counts traffic on the public
            interface. The value is given in terabytes.
        price_monthly:
          type: number
          format: float
          example: 5
          description: >-
            This attribute describes the monthly cost of this Droplet size if
            the Droplet is kept for an entire month. The value is measured in US
            dollars.
        price_hourly:
          type: number
          format: float
          example: 0.00743999984115362
          description: >-
            This describes the price of the Droplet size as measured hourly. The
            value is measured in US dollars.
        regions:
          type: array
          items:
            type: string
          example:
            - ams2
            - ams3
            - blr1
            - fra1
            - lon1
            - nyc1
            - nyc2
            - nyc3
            - sfo1
            - sfo2
            - sfo3
            - sgp1
            - tor1
          description: >-
            An array containing the region slugs where this size is available
            for Droplet creates.
        available:
          type: boolean
          default: true
          example: true
          description: >-
            This is a boolean value that represents whether new Droplets can be
            created with this size.
        description:
          type: string
          example: Basic
          description: >-
            A string describing the class of Droplets created from this size.
            For example: Basic, General Purpose, CPU-Optimized,
            Memory-Optimized, or Storage-Optimized.
      required:
        - available
        - disk
        - memory
        - price_hourly
        - price_monthly
        - regions
        - slug
        - transfer
        - vcpus
        - description
    network_v4:
      type: object
      properties:
        ip_address:
          type: string
          format: ipv4
          example: 104.236.32.182
          description: The IP address of the IPv4 network interface.
        netmask:
          type: string
          format: ipv4
          example: 255.255.192.0
          description: The netmask of the IPv4 network interface.
        gateway:
          type: string
          example: 104.236.0.1
          description: >
            The gateway of the specified IPv4 network interface.


            For private interfaces, a gateway is not provided. This is denoted
            by

            returning `nil` as its value.
        type:
          type: string
          enum:
            - public
            - private
          example: public
          description: The type of the IPv4 network interface.
    network_v6:
      type: object
      properties:
        ip_address:
          type: string
          format: ipv6
          example: "2604:a880:0:1010::18a:a001"
          description: The IP address of the IPv6 network interface.
        netmask:
          type: integer
          example: 64
          description: The netmask of the IPv6 network interface.
        gateway:
          type: string
          format: ipv6
          example: "2604:a880:0:1010::1"
          description: The gateway of the specified IPv6 network interface.
        type:
          type: string
          enum:
            - public
          example: public
          description: |
            The type of the IPv6 network interface.

            **Note**: IPv6 private  networking is not currently supported.
    region:
      type: object
      properties:
        name:
          type: string
          description: >-
            The display name of the region.  This will be a full name that is
            used in the control panel and other interfaces.
          example: New York 3
        slug:
          type: string
          description: >-
            A human-readable string that is used as a unique identifier for each
            region.
          example: nyc3
        features:
          items:
            type: string
          description: >-
            This attribute is set to an array which contains features available
            in this region
          example:
            - private_networking
            - backups
            - ipv6
            - metadata
            - install_agent
            - storage
            - image_transfer
        available:
          type: boolean
          description: >-
            This is a boolean value that represents whether new Droplets can be
            created in this region.
          example: true
        sizes:
          items:
            type: string
          description: >-
            This attribute is set to an array which contains the identifying
            slugs for the sizes available in this region.
          example:
            - s-1vcpu-1gb
            - s-1vcpu-2gb
            - s-1vcpu-3gb
            - s-2vcpu-2gb
            - s-3vcpu-1gb
            - s-2vcpu-4gb
            - s-4vcpu-8gb
            - s-6vcpu-16gb
            - s-8vcpu-32gb
            - s-12vcpu-48gb
            - s-16vcpu-64gb
            - s-20vcpu-96gb
            - s-24vcpu-128gb
            - s-32vcpu-192g
      required:
        - available
        - features
        - name
        - sizes
        - slug
    droplet:
      type: object
      properties:
        id:
          type: integer
          example: 3164444
          description: >-
            A unique identifier for each Droplet instance. This is automatically
            generated upon Droplet creation.
        name:
          type: string
          example: example.com
          description: The human-readable name set for the Droplet instance.
        memory:
          type: integer
          multipleOf: 8
          example: 1024
          description: Memory of the Droplet in megabytes.
        vcpus:
          type: integer
          example: 1
          description: The number of virtual CPUs.
        disk:
          type: integer
          example: 25
          description: The size of the Droplet's disk in gigabytes.
        locked:
          type: boolean
          example: false
          description: >-
            A boolean value indicating whether the Droplet has been locked,
            preventing actions by users.
        status:
          type: string
          enum:
            - new
            - active
            - "off"
            - archive
          example: active
          description: >-
            A status string indicating the state of the Droplet instance. This
            may be "new", "active", "off", or "archive".
        kernel:
          $ref: "#/components/schemas/kernel"
        created_at:
          type: string
          format: date-time
          example: "2020-07-21T18:37:44Z"
          description: >-
            A time value given in ISO8601 combined date and time format that
            represents when the Droplet was created.
        features:
          type: array
          items:
            type: string
          example:
            - backups
            - private_networking
            - ipv6
          description: An array of features enabled on this Droplet.
        backup_ids:
          type: array
          items:
            type: integer
          example:
            - 53893572
          description: >-
            An array of backup IDs of any backups that have been taken of the
            Droplet instance.  Droplet backups are enabled at the time of the
            instance creation.
        next_backup_window:
          type: object
          description: >-
            The details of the Droplet's backups feature, if backups are
            configured for the Droplet. This object contains keys for the start
            and end times of the window during which the backup will start.
          nullable: true
          properties:
            start:
              type: string
              format: date-time
              example: "2019-12-04T00:00:00Z"
              description: >-
                A time value given in ISO8601 combined date and time format
                specifying the start of the Droplet's backup window.
            end:
              type: string
              format: date-time
              example: "2019-12-04T23:00:00Z"
              description: >-
                A time value given in ISO8601 combined date and time format
                specifying the end of the Droplet's backup window.
        snapshot_ids:
          type: array
          items:
            type: integer
          example:
            - 67512819
          description: >-
            An array of snapshot IDs of any snapshots created from the Droplet
            instance.
        image:
          $ref: "#/components/schemas/image"
        volume_ids:
          type: array
          items:
            type: string
          example:
            - 506f78a4-e098-11e5-ad9f-000f53306ae1
          description: >-
            A flat array including the unique identifier for each Block Storage
            volume attached to the Droplet.
        size:
          $ref: "#/components/schemas/size"
        size_slug:
          type: string
          example: s-1vcpu-1gb
          description: The unique slug identifier for the size of this Droplet.
        networks:
          type: object
          description: >-
            The details of the network that are configured for the Droplet
            instance.  This is an object that contains keys for IPv4 and IPv6. 
            The value of each of these is an array that contains objects
            describing an individual IP resource allocated to the Droplet. 
            These will define attributes like the IP address, netmask, and
            gateway of the specific network depending on the type of network it
            is.
          properties:
            v4:
              type: array
              items:
                $ref: "#/components/schemas/network_v4"
            v6:
              type: array
              items:
                $ref: "#/components/schemas/network_v6"
        region:
          $ref: "#/components/schemas/region"
        tags:
          type: array
          items:
            type: string
          example:
            - web
            - "env:prod"
          description: An array of Tags the Droplet has been tagged with.
        vpc_uuid:
          type: string
          example: 760e09ef-dc84-11e8-981e-3cfdfeaae000
          description: >-
            A string specifying the UUID of the VPC to which the Droplet is
            assigned.
      required:
        - id
        - name
        - memory
        - vcpus
        - disk
        - locked
        - status
        - kernel
        - created_at
        - features
        - backup_ids
        - next_backup_window
        - snapshot_ids
        - image
        - volume_ids
        - size
        - size_slug
        - networks
        - region
        - tags
    link_to_last_page:
      type: object
      properties:
        last:
          description: URI of the last page of the results.
          type: string
          example: "https://api.digitalocean.com/v2/images?page=2"
    link_to_next_page:
      type: object
      properties:
        next:
          description: URI of the next page of the results.
          type: string
          example: "https://api.digitalocean.com/v2/images?page=2"
    forward_links:
      type: object
      allOf:
        - $ref: "#/components/schemas/link_to_last_page"
        - $ref: "#/components/schemas/link_to_next_page"
    link_to_first_page:
      type: object
      properties:
        first:
          description: URI of the first page of the results.
          type: string
          example: "https://api.digitalocean.com/v2/images?page=1"
    link_to_prev_page:
      type: object
      properties:
        prev:
          description: URI of the previous page of the results.
          type: string
          example: "https://api.digitalocean.com/v2/images?page=1"
    backward_links:
      type: object
      allOf:
        - $ref: "#/components/schemas/link_to_first_page"
        - $ref: "#/components/schemas/link_to_prev_page"
    page_links:
      type: object
      properties:
        pages:
          type: object
          anyOf:
            - $ref: "#/components/schemas/forward_links"
            - $ref: "#/components/schemas/backward_links"
            - {}
          example:
            pages:
              first: "https://api.digitalocean.com/v2/account/keys?page=1"
              prev: "https://api.digitalocean.com/v2/account/keys?page=2"
    pagination:
      type: object
      properties:
        links:
          $ref: "#/components/schemas/page_links"
    meta:
      type: object
      properties:
        meta:
          description: Information about the response itself.
          type: object
          properties:
            total:
              description: Number of objects returned by the request.
              type: integer
              example: 1
          required:
            - total
      required:
        - meta
    droplet_create:
      properties:
        region:
          type: string
          example: nyc3
          description: >-
            The slug identifier for the region that you wish to deploy the
            Droplet in.
        size:
          type: string
          example: s-1vcpu-1gb
          description: >-
            The slug identifier for the size that you wish to select for this
            Droplet.
        image:
          oneOf:
            - type: string
            - type: integer
          example: ubuntu-20-04-x64
          description: >-
            The image ID of a public or private image or the slug identifier for
            a public image. This image will be the base image for your Droplet.
        ssh_keys:
          type: array
          items:
            type: object
            anyOf:
              - type: string
              - type: integer
          example:
            - 289794
            - "3b:16:e4:bf:8b:00:8b:b8:59:8c:a9:d3:f0:19:fa:45"
          default: []
          description: >-
            An array containing the IDs or fingerprints of the SSH keys that you
            wish to embed in the Droplet's root account upon creation.
        backups:
          type: boolean
          example: true
          default: false
          description: >-
            A boolean indicating whether automated backups should be enabled for
            the Droplet.
        ipv6:
          type: boolean
          example: true
          default: false
          description: A boolean indicating whether to enable IPv6 on the Droplet.
        monitoring:
          type: boolean
          example: true
          default: false
          description: >-
            A boolean indicating whether to install the DigitalOcean agent for
            monitoring.
        tags:
          type: array
          items:
            type: string
          example:
            - "env:prod"
            - web
          default: []
          description: >-
            A flat array of tag names as strings to apply to the Droplet after
            it is created. Tag names can either be existing or new tags.
        user_data:
          type: string
          example: |
            #cloud-config
            runcmd:
              - touch /test.txt
          description: >-
            A string containing 'user data' which may be used to configure the
            Droplet on first boot, often a 'cloud-config' file or Bash script.
            It must be plain text and may not exceed 64 KiB in size.
        private_networking:
          type: boolean
          example: true
          default: false
          deprecated: true
          description: >-
            This parameter has been deprecated. Use `vpc_uuid` instead to
            specify a VPC network for the Droplet. If no `vpc_uuid` is provided,
            the Droplet will be placed in your account's default VPC for the
            region.
        vpc_uuid:
          type: string
          example: 760e09ef-dc84-11e8-981e-3cfdfeaae000
          description: >-
            A string specifying the UUID of the VPC to which the Droplet will be
            assigned. If excluded, the Droplet will be assigned to your
            account's default VPC for the region.
      required:
        - region
        - size
        - image
    droplet_single_create:
      title: Single Droplet Request
      allOf:
        - type: object
          properties:
            name:
              type: string
              example: example.com
              description: >-
                The human-readable string you wish to use when displaying the
                Droplet name. The name, if set to a domain name managed in the
                DigitalOcean DNS management system, will configure a PTR record
                for the Droplet. The name set during creation will also
                determine the hostname for the Droplet in its internal
                configuration.
          required:
            - name
        - $ref: "#/components/schemas/droplet_create"
    droplet_multi_create:
      title: Multiple Droplet Request
      allOf:
        - type: object
          properties:
            names:
              type: array
              items:
                type: string
              example:
                - sub-01.example.com
                - sub-02.example.com
              description: >-
                An array of human human-readable strings you wish to use when
                displaying the Droplet name. Each name, if set to a domain name
                managed in the DigitalOcean DNS management system, will
                configure a PTR record for the Droplet. Each name set during
                creation will also determine the hostname for the Droplet in its
                internal configuration.
          required:
            - names
        - $ref: "#/components/schemas/droplet_create"
    action_link:
      type: object
      description: >-
        The linked actions can be used to check the status of a Droplet's create
        event.
      properties:
        id:
          type: integer
          example: 7515
          description: >-
            A unique numeric ID that can be used to identify and reference an
            action.
        rel:
          type: string
          example: create
          description: A string specifying the type of the related action.
        href:
          type: string
          format: uri
          example: "https://api.digitalocean.com/v2/actions/7515"
          description: A URL that can be used to access the action.
    snapshot_base:
      type: object
      properties:
        name:
          type: string
          example: web-01-1595954862243
          description: A human-readable name for the snapshot.
        created_at:
          type: string
          format: date-time
          example: "2020-07-28T16:47:44Z"
          description: >-
            A time value given in ISO8601 combined date and time format that
            represents when the snapshot was created.
        regions:
          type: array
          items:
            type: string
          example:
            - nyc3
            - sfo3
          description: >-
            An array of the regions that the snapshot is available in. The
            regions are represented by their identifying slug values.
        min_disk_size:
          type: integer
          example: 25
          description: >-
            The minimum size in GB required for a volume or Droplet to use this
            snapshot.
        size_gigabytes:
          type: number
          format: float
          example: 2.34
          description: The billable size of the snapshot in gigabytes.
      required:
        - name
        - created_at
        - regions
        - min_disk_size
        - size_gigabytes
    droplet_snapshot:
      allOf:
        - type: object
          properties:
            id:
              type: integer
              example: 6372321
              description: The unique identifier for the snapshot or backup.
          required:
            - id
        - $ref: "#/components/schemas/snapshot_base"
        - type: object
          properties:
            type:
              type: string
              enum:
                - snapshot
                - backup
              example: snapshot
              description: >-
                Describes the kind of image. It may be one of `snapshot` or
                `backup`. This specifies whether an image is a user-generated
                Droplet snapshot or automatically created Droplet backup.
          required:
            - type
    slug:
      type: string
      description: >-
        A human-readable string that is used as a unique identifier for each
        region.
      example: nyc3
    action:
      type: object
      properties:
        id:
          type: integer
          description: >-
            A unique numeric ID that can be used to identify and reference an
            action.
          example: 36804636
        status:
          type: string
          description: >-
            The current status of the action. This can be "in-progress",
            "completed", or "errored".
          enum:
            - in-progress
            - completed
            - errored
          example: completed
          default: in-progress
        type:
          type: string
          description: >-
            This is the type of action that the object represents. For example,
            this could be "transfer" to represent the state of an image transfer
            action.
          example: create
        started_at:
          type: string
          format: date-time
          description: >-
            A time value given in ISO8601 combined date and time format that
            represents when the action was initiated.
          example: 2020-11-14T16:29:21.000Z
        completed_at:
          type: string
          format: date-time
          nullable: true
          description: >-
            A time value given in ISO8601 combined date and time format that
            represents when the action was completed.
          example: 2020-11-14T16:30:06.000Z
        resource_id:
          type: integer
          nullable: true
          description: >-
            A unique identifier for the resource that the action is associated
            with.
          example: 3164444
        resource_type:
          type: string
          description: The type of resource that the action is associated with.
          example: droplet
        region:
          $ref: "#/components/schemas/region"
        region_slug:
          type: string
          allOf:
            - $ref: "#/components/schemas/slug"
            - type: string
              nullable: true
    droplet_action_type_enum:
      required:
        - type
      type: object
      description: Specifies the action that will be taken on the Droplet.
      properties:
        type:
          type: string
          enum:
            - enable_backups
            - disable_backups
            - reboot
            - power_cycle
            - shutdown
            - power_off
            - power_on
            - restore
            - password_reset
            - resize
            - rebuild
            - rename
            - change_kernel
            - enable_ipv6
            - snapshot
          example: reboot
          description: The type of action to initiate for the Droplet.
    droplet_action_restore:
      allOf:
        - $ref: "#/components/schemas/droplet_action_type_enum"
        - type: object
          properties:
            image:
              type: integer
              example: 12389723
              description: >-
                The ID of a backup of the current Droplet instance to restore
                from.
    droplet_action_resize:
      allOf:
        - $ref: "#/components/schemas/droplet_action_type_enum"
        - type: object
          properties:
            disk:
              type: boolean
              example: true
              description: >-
                When `true`, the Droplet's disk will be resized in addition to
                its RAM and CPU. This is a permanent change and cannot be
                reversed as a Droplet's disk size cannot be decreased.
            size:
              type: string
              example: s-2vcpu-2gb
              description: >-
                The slug identifier for the size to which you wish to resize the
                Droplet.
    droplet_action_rebuild:
      allOf:
        - $ref: "#/components/schemas/droplet_action_type_enum"
        - type: object
          properties:
            image:
              oneOf:
                - type: string
                - type: integer
              example: ubuntu-20-04-x64
              description: >-
                The image ID of a public or private image or the slug identifier
                for a public image. The Droplet will be rebuilt using this image
                as its base.
    droplet_action_rename:
      allOf:
        - $ref: "#/components/schemas/droplet_action_type_enum"
        - type: object
          properties:
            name:
              type: string
              example: nifty-new-name
              description: The new name for the Droplet.
    droplet_action_change_kernel:
      allOf:
        - $ref: "#/components/schemas/droplet_action_type_enum"
        - type: object
          properties:
            kernel:
              type: integer
              example: 12389723
              description: >-
                A unique number used to identify and reference a specific
                kernel.
    droplet_action_snapshot:
      allOf:
        - $ref: "#/components/schemas/droplet_action_type_enum"
        - type: object
          properties:
            name:
              type: string
              example: Nifty New Snapshot
              description: The name to give the new snapshot of the Droplet.
  responses:
    unexpected_error:
      description: Unexpected error
      headers:
        ratelimit-limit:
          $ref: "#/components/headers/ratelimit-limit"
        ratelimit-remaining:
          $ref: "#/components/headers/ratelimit-remaining"
        ratelimit-reset:
          $ref: "#/components/headers/ratelimit-reset"
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/error"
          example:
            id: im_a_teapot
            message: how do you do?
    all_droplets:
      description: A JSON object with a key of `droplets`.
      headers:
        ratelimit-limit:
          $ref: "#/components/headers/ratelimit-limit"
        ratelimit-remaining:
          $ref: "#/components/headers/ratelimit-remaining"
        ratelimit-reset:
          $ref: "#/components/headers/ratelimit-reset"
      content:
        application/json:
          schema:
            allOf:
              - type: object
                properties:
                  droplets:
                    type: array
                    items:
                      $ref: "#/components/schemas/droplet"
              - $ref: "#/components/schemas/pagination"
              - $ref: "#/components/schemas/meta"
          examples:
            All Droplets:
              $ref: "#/components/examples/droplets_all"
            Droplets Filtered By Tag:
              $ref: "#/components/examples/droplets_tagged"
    unauthorized:
      description: Unauthorized
      headers:
        ratelimit-limit:
          $ref: "#/components/headers/ratelimit-limit"
        ratelimit-remaining:
          $ref: "#/components/headers/ratelimit-remaining"
        ratelimit-reset:
          $ref: "#/components/headers/ratelimit-reset"
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/error"
          example:
            id: unauthorized
            message: Unable to authenticate you.
    too_many_requests:
      description: API Rate limit exceeded
      headers:
        ratelimit-limit:
          $ref: "#/components/headers/ratelimit-limit"
        ratelimit-remaining:
          $ref: "#/components/headers/ratelimit-remaining"
        ratelimit-reset:
          $ref: "#/components/headers/ratelimit-reset"
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/error"
          example:
            id: too_many_requests
            message: API Rate limit exceeded.
    server_error:
      description: Server error.
      headers:
        ratelimit-limit:
          $ref: "#/components/headers/ratelimit-limit"
        ratelimit-remaining:
          $ref: "#/components/headers/ratelimit-remaining"
        ratelimit-reset:
          $ref: "#/components/headers/ratelimit-reset"
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/error"
          example:
            id: server_error
            message: Unexpected server-side error
    droplet_create:
      description: Accepted
      headers:
        ratelimit-limit:
          $ref: "#/components/headers/ratelimit-limit"
        ratelimit-remaining:
          $ref: "#/components/headers/ratelimit-remaining"
        ratelimit-reset:
          $ref: "#/components/headers/ratelimit-reset"
      content:
        application/json:
          schema:
            oneOf:
              - title: Single Droplet Response
                properties:
                  droplet:
                    $ref: "#/components/schemas/droplet"
                  links:
                    type: object
                    properties:
                      actions:
                        type: array
                        items:
                          $ref: "#/components/schemas/action_link"
                required:
                  - droplet
                  - links
              - title: Multiple Droplet Response
                properties:
                  droplets:
                    type: array
                    items:
                      $ref: "#/components/schemas/droplet"
                  links:
                    type: object
                    properties:
                      actions:
                        type: array
                        items:
                          $ref: "#/components/schemas/action_link"
                required:
                  - droplets
                  - links
          examples:
            Single Droplet Create Response:
              $ref: "#/components/examples/droplet_create_response"
            Multiple Droplet Create Response:
              $ref: "#/components/examples/droplet_multi_create_response"
    no_content:
      description: The action was successful and the response body is empty.
      headers:
        ratelimit-limit:
          $ref: "#/components/headers/ratelimit-limit"
        ratelimit-remaining:
          $ref: "#/components/headers/ratelimit-remaining"
        ratelimit-reset:
          $ref: "#/components/headers/ratelimit-reset"
    not_found:
      description: The resource was not found.
      headers:
        ratelimit-limit:
          $ref: "#/components/headers/ratelimit-limit"
        ratelimit-remaining:
          $ref: "#/components/headers/ratelimit-remaining"
        ratelimit-reset:
          $ref: "#/components/headers/ratelimit-reset"
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/error"
          example:
            id: not_found
            message: The resource you requested could not be found.
    existing_droplet:
      description: >
        The response will be a JSON object with a key called `droplet`. This
        will be

        set to a JSON object that contains the standard Droplet attributes.
      headers:
        ratelimit-limit:
          $ref: "#/components/headers/ratelimit-limit"
        ratelimit-remaining:
          $ref: "#/components/headers/ratelimit-remaining"
        ratelimit-reset:
          $ref: "#/components/headers/ratelimit-reset"
      content:
        application/json:
          schema:
            properties:
              droplet:
                $ref: "#/components/schemas/droplet"
          examples:
            Single Droplet:
              $ref: "#/components/examples/droplet_single"
    all_droplet_backups:
      description: A JSON object with an `backups` key.
      headers:
        ratelimit-limit:
          $ref: "#/components/headers/ratelimit-limit"
        ratelimit-remaining:
          $ref: "#/components/headers/ratelimit-remaining"
        ratelimit-reset:
          $ref: "#/components/headers/ratelimit-reset"
      content:
        application/json:
          schema:
            allOf:
              - type: object
                properties:
                  backups:
                    type: array
                    items:
                      $ref: "#/components/schemas/droplet_snapshot"
              - $ref: "#/components/schemas/pagination"
              - $ref: "#/components/schemas/meta"
          example:
            backups:
              - id: 67539192
                name: web-01- 2020-07-29
                distribution: Ubuntu
                slug: null
                public: false
                regions:
                  - nyc3
                created_at: "2020-07-29T01:44:35Z"
                min_disk_size: 50
                size_gigabytes: 2.34
                type: backup
            links: {}
            meta:
              total: 1
    all_droplet_snapshots:
      description: A JSON object with an `snapshots` key.
      headers:
        ratelimit-limit:
          $ref: "#/components/headers/ratelimit-limit"
        ratelimit-remaining:
          $ref: "#/components/headers/ratelimit-remaining"
        ratelimit-reset:
          $ref: "#/components/headers/ratelimit-reset"
      content:
        application/json:
          schema:
            allOf:
              - type: object
                properties:
                  snapshots:
                    type: array
                    items:
                      $ref: "#/components/schemas/droplet_snapshot"
              - $ref: "#/components/schemas/pagination"
              - $ref: "#/components/schemas/meta"
          example:
            snapshots:
              - id: 6372321
                name: web-01-1595954862243
                created_at: "2020-07-28T16:47:44Z"
                regions:
                  - nyc3
                  - sfo3
                min_disk_size: 25
                size_gigabytes: 2.34
                type: snapshot
            links: {}
            meta:
              total: 1
    all_droplet_actions:
      description: A JSON object with an `actions` key.
      headers:
        ratelimit-limit:
          $ref: "#/components/headers/ratelimit-limit"
        ratelimit-remaining:
          $ref: "#/components/headers/ratelimit-remaining"
        ratelimit-reset:
          $ref: "#/components/headers/ratelimit-reset"
      content:
        application/json:
          schema:
            allOf:
              - type: object
                properties:
                  actions:
                    type: array
                    items:
                      $ref: "#/components/schemas/action"
              - $ref: "#/components/schemas/pagination"
              - $ref: "#/components/schemas/meta"
          example:
            actions:
              - id: 982864273
                status: completed
                type: create
                started_at: 2020-07-20T19:37:30.000Z
                completed_at: 2020-07-20T19:37:45.000Z
                resource_id: 3164444
                resource_type: droplet
                region:
                  name: New York 3
                  slug: nyc3
                  features:
                    - private_networking
                    - backups
                    - ipv6
                    - metadata
                    - install_agent
                    - image_transfer
                  available: true
                  sizes:
                    - s-1vcpu-1gb
                    - s-1vcpu-2gb
                    - s-3vcpu-1gb
                    - s-2vcpu-2gb
                    - s-1vcpu-3gb
                    - s-2vcpu-4gb
                    - s-4vcpu-8gb
                    - m-1vcpu-8gb
                    - s-6vcpu-16gb
                    - s-8vcpu-32gb
                    - s-12vcpu-48gb
                region_slug: nyc3
            links: {}
            meta:
              total: 1
    droplet_action:
      description: The response will be a JSON object with a key called `action`.
      headers:
        ratelimit-limit:
          $ref: "#/components/headers/ratelimit-limit"
        ratelimit-remaining:
          $ref: "#/components/headers/ratelimit-remaining"
        ratelimit-reset:
          $ref: "#/components/headers/ratelimit-reset"
      content:
        application/json:
          schema:
            properties:
              action:
                $ref: "#/components/schemas/action"
  examples:
    droplets_all:
      value:
        droplets:
          - id: 3164444
            name: example.com
            memory: 1024
            vcpus: 1
            disk: 25
            locked: false
            status: active
            kernel: null
            created_at: "2020-07-21T18:37:44Z"
            features:
              - backups
              - private_networking
              - ipv6
            backup_ids:
              - 53893572
            next_backup_window:
              start: "2020-07-30T00:00:00Z"
              end: "2020-07-30T23:00:00Z"
            snapshot_ids:
              - 67512819
            image:
              id: 63663980
              name: 20.04 (LTS) x64
              distribution: Ubuntu
              slug: ubuntu-20-04-x64
              public: true
              regions:
                - ams2
                - ams3
                - blr1
                - fra1
                - lon1
                - nyc1
                - nyc2
                - nyc3
                - sfo1
                - sfo2
                - sfo3
                - sgp1
                - tor1
              created_at: "2020-05-15T05:47:50Z"
              type: snapshot
              min_disk_size: 20
              size_gigabytes: 2.36
              description: ""
              tags: []
              status: available
              error_message: ""
            volume_ids: []
            size:
              slug: s-1vcpu-1gb
              memory: 1024
              vcpus: 1
              disk: 25
              transfer: 1
              price_monthly: 5
              price_hourly: 0.00743999984115362
              regions:
                - ams2
                - ams3
                - blr1
                - fra1
                - lon1
                - nyc1
                - nyc2
                - nyc3
                - sfo1
                - sfo2
                - sfo3
                - sgp1
                - tor1
              available: true
              description: Basic
            size_slug: s-1vcpu-1gb
            networks:
              v4:
                - ip_address: 10.128.192.124
                  netmask: 255.255.0.0
                  gateway: nil
                  type: private
                - ip_address: 192.241.165.154
                  netmask: 255.255.255.0
                  gateway: 192.241.165.1
                  type: public
              v6:
                - ip_address: "2604:a880:0:1010::18a:a001"
                  netmask: 64
                  gateway: "2604:a880:0:1010::1"
                  type: public
            region:
              name: New York 3
              slug: nyc3
              features:
                - private_networking
                - backups
                - ipv6
                - metadata
                - install_agent
                - storage
                - image_transfer
              available: true
              sizes:
                - s-1vcpu-1gb
                - s-1vcpu-2gb
                - s-1vcpu-3gb
                - s-2vcpu-2gb
                - s-3vcpu-1gb
                - s-2vcpu-4gb
                - s-4vcpu-8gb
                - s-6vcpu-16gb
                - s-8vcpu-32gb
                - s-12vcpu-48gb
                - s-16vcpu-64gb
                - s-20vcpu-96gb
                - s-24vcpu-128gb
                - s-32vcpu-192g
            tags:
              - web
              - "env:prod"
            vpc_uuid: 760e09ef-dc84-11e8-981e-3cfdfeaae000
          - id: 3164459
            name: assets.example.com
            memory: 1024
            vcpus: 1
            disk: 25
            locked: false
            status: active
            kernel: null
            created_at: "2020-07-21T18:42:27Z"
            features:
              - private_networking
            backup_ids: []
            next_backup_window:
              start: "2020-07-30T00:00:00Z"
              end: "2020-07-30T23:00:00Z"
            snapshot_ids: []
            image:
              id: 63663980
              name: 20.04 (LTS) x64
              distribution: Ubuntu
              slug: ubuntu-20-04-x64
              public: true
              regions:
                - ams2
                - ams3
                - blr1
                - fra1
                - lon1
                - nyc1
                - nyc2
                - nyc3
                - sfo1
                - sfo2
                - sfo3
                - sgp1
                - tor1
              created_at: "2020-05-15T05:47:50Z"
              type: snapshot
              min_disk_size: 20
              size_gigabytes: 2.36
              description: ""
              tags: []
              status: available
              error_message: ""
            volume_ids:
              - 506f78a4-e098-11e5-ad9f-000f53306ae1
            size:
              slug: s-1vcpu-1gb
              memory: 1024
              vcpus: 1
              disk: 25
              transfer: 1
              price_monthly: 5
              price_hourly: 0.00743999984115362
              regions:
                - ams2
                - ams3
                - blr1
                - fra1
                - lon1
                - nyc1
                - nyc2
                - nyc3
                - sfo1
                - sfo2
                - sfo3
                - sgp1
                - tor1
              available: true
              description: Basic
            size_slug: s-1vcpu-1gb
            networks:
              v4:
                - ip_address: 10.128.192.138
                  netmask: 255.255.0.0
                  gateway: nil
                  type: private
                - ip_address: 162.243.0.4
                  netmask: 255.255.255.0
                  gateway: 162.243.0.1
                  type: public
              v6: []
            region:
              name: New York 3
              slug: nyc3
              features:
                - private_networking
                - backups
                - ipv6
                - metadata
                - install_agent
                - storage
                - image_transfer
              available: true
              sizes:
                - s-1vcpu-1gb
                - s-1vcpu-2gb
                - s-1vcpu-3gb
                - s-2vcpu-2gb
                - s-3vcpu-1gb
                - s-2vcpu-4gb
                - s-4vcpu-8gb
                - s-6vcpu-16gb
                - s-8vcpu-32gb
                - s-12vcpu-48gb
                - s-16vcpu-64gb
                - s-20vcpu-96gb
                - s-24vcpu-128gb
                - s-32vcpu-192g
            tags:
              - storage
              - "env:prod"
            vpc_uuid: 760e09ef-dc84-11e8-981e-3cfdfeaae000
          - id: 3164412
            name: stage.example.com
            memory: 1024
            vcpus: 1
            disk: 25
            locked: false
            status: active
            kernel: null
            created_at: "2020-07-21T18:32:55Z"
            features:
              - private_networking
            backup_ids: []
            next_backup_window:
              start: "2020-07-30T00:00:00Z"
              end: "2020-07-30T23:00:00Z"
            snapshot_ids: []
            image:
              id: 63663980
              name: 20.04 (LTS) x64
              distribution: Ubuntu
              slug: ubuntu-20-04-x64
              public: true
              regions:
                - ams2
                - ams3
                - blr1
                - fra1
                - lon1
                - nyc1
                - nyc2
                - nyc3
                - sfo1
                - sfo2
                - sfo3
                - sgp1
                - tor1
              created_at: "2020-05-15T05:47:50Z"
              type: snapshot
              min_disk_size: 20
              size_gigabytes: 2.36
              description: ""
              tags: []
              status: available
              error_message: ""
            volume_ids:
              - 7724db7c-e098-11e5-b522-000f53304e51
            size:
              slug: s-1vcpu-1gb
              memory: 1024
              vcpus: 1
              disk: 25
              transfer: 1
              price_monthly: 5
              price_hourly: 0.00743999984115362
              regions:
                - ams2
                - ams3
                - blr1
                - fra1
                - lon1
                - nyc1
                - nyc2
                - nyc3
                - sfo1
                - sfo2
                - sfo3
                - sgp1
                - tor1
              available: true
              description: Basic
            size_slug: s-1vcpu-1gb
            networks:
              v4:
                - ip_address: 10.128.192.125
                  netmask: 255.255.0.0
                  gateway: nil
                  type: private
                - ip_address: 192.241.247.248
                  netmask: 255.255.255.0
                  gateway: 192.241.247.1
                  type: public
              v6: []
            region:
              name: New York 3
              slug: nyc3
              features:
                - private_networking
                - backups
                - ipv6
                - metadata
                - install_agent
                - storage
                - image_transfer
              available: true
              sizes:
                - s-1vcpu-1gb
                - s-1vcpu-2gb
                - s-1vcpu-3gb
                - s-2vcpu-2gb
                - s-3vcpu-1gb
                - s-2vcpu-4gb
                - s-4vcpu-8gb
                - s-6vcpu-16gb
                - s-8vcpu-32gb
                - s-12vcpu-48gb
                - s-16vcpu-64gb
                - s-20vcpu-96gb
                - s-24vcpu-128gb
                - s-32vcpu-192g
            tags:
              - "env:stage"
            vpc_uuid: 5a4981aa-9653-4bd1-bef5-d6bff52042e4
        links:
          pages: {}
        meta:
          total: 3
    droplets_tagged:
      value:
        droplets:
          - id: 3164444
            name: example.com
            memory: 1024
            vcpus: 1
            disk: 25
            locked: false
            status: active
            kernel: null
            created_at: "2020-07-21T18:37:44Z"
            features:
              - backups
              - private_networking
              - ipv6
            backup_ids:
              - 53893572
            next_backup_window:
              start: "2020-07-30T00:00:00Z"
              end: "2020-07-30T23:00:00Z"
            snapshot_ids:
              - 67512819
            image:
              id: 63663980
              name: 20.04 (LTS) x64
              distribution: Ubuntu
              slug: ubuntu-20-04-x64
              public: true
              regions:
                - ams2
                - ams3
                - blr1
                - fra1
                - lon1
                - nyc1
                - nyc2
                - nyc3
                - sfo1
                - sfo2
                - sfo3
                - sgp1
                - tor1
              created_at: "2020-05-15T05:47:50Z"
              type: snapshot
              min_disk_size: 20
              size_gigabytes: 2.36
              description: ""
              tags: []
              status: available
              error_message: ""
            volume_ids: []
            size:
              slug: s-1vcpu-1gb
              memory: 1024
              vcpus: 1
              disk: 25
              transfer: 1
              price_monthly: 5
              price_hourly: 0.00743999984115362
              regions:
                - ams2
                - ams3
                - blr1
                - fra1
                - lon1
                - nyc1
                - nyc2
                - nyc3
                - sfo1
                - sfo2
                - sfo3
                - sgp1
                - tor1
              available: true
              description: Basic
            size_slug: s-1vcpu-1gb
            networks:
              v4:
                - ip_address: 10.128.192.124
                  netmask: 255.255.0.0
                  gateway: nil
                  type: private
                - ip_address: 192.241.165.154
                  netmask: 255.255.255.0
                  gateway: 192.241.165.1
                  type: public
              v6:
                - ip_address: "2604:a880:0:1010::18a:a001"
                  netmask: 64
                  gateway: "2604:a880:0:1010::1"
                  type: public
            region:
              name: New York 3
              slug: nyc3
              features:
                - private_networking
                - backups
                - ipv6
                - metadata
                - install_agent
                - storage
                - image_transfer
              available: true
              sizes:
                - s-1vcpu-1gb
                - s-1vcpu-2gb
                - s-1vcpu-3gb
                - s-2vcpu-2gb
                - s-3vcpu-1gb
                - s-2vcpu-4gb
                - s-4vcpu-8gb
                - s-6vcpu-16gb
                - s-8vcpu-32gb
                - s-12vcpu-48gb
                - s-16vcpu-64gb
                - s-20vcpu-96gb
                - s-24vcpu-128gb
                - s-32vcpu-192g
            tags:
              - web
              - "env:prod"
            vpc_uuid: 760e09ef-dc84-11e8-981e-3cfdfeaae000
          - id: 3164459
            name: assets.example.com
            memory: 1024
            vcpus: 1
            disk: 25
            locked: false
            status: active
            kernel: null
            created_at: "2020-07-21T18:42:27Z"
            features:
              - private_networking
            backup_ids: []
            next_backup_window:
              start: "2020-07-30T00:00:00Z"
              end: "2020-07-30T23:00:00Z"
            snapshot_ids: []
            image:
              id: 63663980
              name: 20.04 (LTS) x64
              distribution: Ubuntu
              slug: ubuntu-20-04-x64
              public: true
              regions:
                - ams2
                - ams3
                - blr1
                - fra1
                - lon1
                - nyc1
                - nyc2
                - nyc3
                - sfo1
                - sfo2
                - sfo3
                - sgp1
                - tor1
              created_at: "2020-05-15T05:47:50Z"
              type: snapshot
              min_disk_size: 20
              size_gigabytes: 2.36
              description: ""
              tags: []
              status: available
              error_message: ""
            volume_ids:
              - 506f78a4-e098-11e5-ad9f-000f53306ae1
            size:
              slug: s-1vcpu-1gb
              memory: 1024
              vcpus: 1
              disk: 25
              transfer: 1
              price_monthly: 5
              price_hourly: 0.00743999984115362
              regions:
                - ams2
                - ams3
                - blr1
                - fra1
                - lon1
                - nyc1
                - nyc2
                - nyc3
                - sfo1
                - sfo2
                - sfo3
                - sgp1
                - tor1
              available: true
              description: Basic
            size_slug: s-1vcpu-1gb
            networks:
              v4:
                - ip_address: 10.128.192.138
                  netmask: 255.255.0.0
                  gateway: nil
                  type: private
                - ip_address: 162.243.0.4
                  netmask: 255.255.255.0
                  gateway: 162.243.0.1
                  type: public
              v6: []
            region:
              name: New York 3
              slug: nyc3
              features:
                - private_networking
                - backups
                - ipv6
                - metadata
                - install_agent
                - storage
                - image_transfer
              available: true
              sizes:
                - s-1vcpu-1gb
                - s-1vcpu-2gb
                - s-1vcpu-3gb
                - s-2vcpu-2gb
                - s-3vcpu-1gb
                - s-2vcpu-4gb
                - s-4vcpu-8gb
                - s-6vcpu-16gb
                - s-8vcpu-32gb
                - s-12vcpu-48gb
                - s-16vcpu-64gb
                - s-20vcpu-96gb
                - s-24vcpu-128gb
                - s-32vcpu-192g
            tags:
              - storage
              - "env:prod"
            vpc_uuid: 760e09ef-dc84-11e8-981e-3cfdfeaae000
        links:
          pages: {}
        meta:
          total: 2
    droplet_create_request:
      value:
        name: example.com
        region: nyc3
        size: s-1vcpu-1gb
        image: ubuntu-20-04-x64
        ssh_keys:
          - 289794
          - "3b:16:e4:bf:8b:00:8b:b8:59:8c:a9:d3:f0:19:fa:45"
        backups: true
        ipv6: true
        monitoring: true
        tags:
          - "env:prod"
          - web
        user_data: |
          #cloud-config
          runcmd:
            - touch /test.txt
        vpc_uuid: 760e09ef-dc84-11e8-981e-3cfdfeaae000
    droplet_multi_create_request:
      value:
        names:
          - sub-01.example.com
          - sub-02.example.com
        region: nyc3
        size: s-1vcpu-1gb
        image: ubuntu-20-04-x64
        ssh_keys:
          - 289794
          - "3b:16:e4:bf:8b:00:8b:b8:59:8c:a9:d3:f0:19:fa:45"
        backups: true
        ipv6: true
        monitoring: true
        tags:
          - "env:prod"
          - web
        user_data: |
          #cloud-config
          runcmd:
            - touch /test.txt
        vpc_uuid: 760e09ef-dc84-11e8-981e-3cfdfeaae000
    droplet_create_response:
      value:
        droplet:
          id: 3164444
          name: example.com
          memory: 1024
          vcpus: 1
          disk: 25
          locked: false
          status: new
          kernel: null
          created_at: "2020-07-21T18:37:44Z"
          features:
            - backups
            - private_networking
            - ipv6
            - monitoring
          backup_ids: []
          next_backup_window: null
          snapshot_ids: []
          image:
            id: 63663980
            name: 20.04 (LTS) x64
            distribution: Ubuntu
            slug: ubuntu-20-04-x64
            public: true
            regions:
              - ams2
              - ams3
              - blr1
              - fra1
              - lon1
              - nyc1
              - nyc2
              - nyc3
              - sfo1
              - sfo2
              - sfo3
              - sgp1
              - tor1
            created_at: "2020-05-15T05:47:50Z"
            type: snapshot
            min_disk_size: 20
            size_gigabytes: 2.36
            description: ""
            tags: []
            status: available
            error_message: ""
          volume_ids: []
          size:
            slug: s-1vcpu-1gb
            memory: 1024
            vcpus: 1
            disk: 25
            transfer: 1
            price_monthly: 5
            price_hourly: 0.00743999984115362
            regions:
              - ams2
              - ams3
              - blr1
              - fra1
              - lon1
              - nyc1
              - nyc2
              - nyc3
              - sfo1
              - sfo2
              - sfo3
              - sgp1
              - tor1
            available: true
            description: Basic
          size_slug: s-1vcpu-1gb
          networks:
            v4: []
            v6: []
          region:
            name: New York 3
            slug: nyc3
            features:
              - private_networking
              - backups
              - ipv6
              - metadata
              - install_agent
              - storage
              - image_transfer
            available: true
            sizes:
              - s-1vcpu-1gb
              - s-1vcpu-2gb
              - s-1vcpu-3gb
              - s-2vcpu-2gb
              - s-3vcpu-1gb
              - s-2vcpu-4gb
              - s-4vcpu-8gb
              - s-6vcpu-16gb
              - s-8vcpu-32gb
              - s-12vcpu-48gb
              - s-16vcpu-64gb
              - s-20vcpu-96gb
              - s-24vcpu-128gb
              - s-32vcpu-192g
          tags:
            - web
            - "env:prod"
        links:
          actions:
            - id: 7515
              rel: create
              href: "https://api.digitalocean.com/v2/actions/7515"
    droplet_multi_create_response:
      value:
        droplets:
          - id: 3164444
            name: sub-01.example.com
            memory: 1024
            vcpus: 1
            disk: 25
            locked: false
            status: new
            kernel: null
            created_at: "2020-07-21T18:37:44Z"
            features:
              - backups
              - private_networking
              - ipv6
              - monitoring
            backup_ids: []
            next_backup_window: null
            snapshot_ids: []
            image:
              id: 63663980
              name: 20.04 (LTS) x64
              distribution: Ubuntu
              slug: ubuntu-20-04-x64
              public: true
              regions:
                - ams2
                - ams3
                - blr1
                - fra1
                - lon1
                - nyc1
                - nyc2
                - nyc3
                - sfo1
                - sfo2
                - sfo3
                - sgp1
                - tor1
              created_at: "2020-05-15T05:47:50Z"
              type: snapshot
              min_disk_size: 20
              size_gigabytes: 2.36
              description: ""
              tags: []
              status: available
              error_message: ""
            volume_ids: []
            size:
              slug: s-1vcpu-1gb
              memory: 1024
              vcpus: 1
              disk: 25
              transfer: 1
              price_monthly: 5
              price_hourly: 0.00743999984115362
              regions:
                - ams2
                - ams3
                - blr1
                - fra1
                - lon1
                - nyc1
                - nyc2
                - nyc3
                - sfo1
                - sfo2
                - sfo3
                - sgp1
                - tor1
              available: true
              description: Basic
            size_slug: s-1vcpu-1gb
            networks:
              v4: []
              v6: []
            region:
              name: New York 3
              slug: nyc3
              features:
                - private_networking
                - backups
                - ipv6
                - metadata
                - install_agent
                - storage
                - image_transfer
              available: true
              sizes:
                - s-1vcpu-1gb
                - s-1vcpu-2gb
                - s-1vcpu-3gb
                - s-2vcpu-2gb
                - s-3vcpu-1gb
                - s-2vcpu-4gb
                - s-4vcpu-8gb
                - s-6vcpu-16gb
                - s-8vcpu-32gb
                - s-12vcpu-48gb
                - s-16vcpu-64gb
                - s-20vcpu-96gb
                - s-24vcpu-128gb
                - s-32vcpu-192g
            tags:
              - web
              - "env:prod"
          - id: 3164445
            name: sub-02.example.com
            memory: 1024
            vcpus: 1
            disk: 25
            locked: false
            status: new
            kernel: null
            created_at: "2020-07-21T18:37:44Z"
            features:
              - backups
              - private_networking
              - ipv6
              - monitoring
            backup_ids: []
            next_backup_window: null
            snapshot_ids: []
            image:
              id: 63663980
              name: 20.04 (LTS) x64
              distribution: Ubuntu
              slug: ubuntu-20-04-x64
              public: true
              regions:
                - ams2
                - ams3
                - blr1
                - fra1
                - lon1
                - nyc1
                - nyc2
                - nyc3
                - sfo1
                - sfo2
                - sfo3
                - sgp1
                - tor1
              created_at: "2020-05-15T05:47:50Z"
              type: snapshot
              min_disk_size: 20
              size_gigabytes: 2.36
              description: ""
              tags: []
              status: available
              error_message: ""
            volume_ids: []
            size:
              slug: s-1vcpu-1gb
              memory: 1024
              vcpus: 1
              disk: 25
              transfer: 1
              price_monthly: 5
              price_hourly: 0.00743999984115362
              regions:
                - ams2
                - ams3
                - blr1
                - fra1
                - lon1
                - nyc1
                - nyc2
                - nyc3
                - sfo1
                - sfo2
                - sfo3
                - sgp1
                - tor1
              available: true
              description: Basic
            size_slug: s-1vcpu-1gb
            networks:
              v4: []
              v6: []
            region:
              name: New York 3
              slug: nyc3
              features:
                - private_networking
                - backups
                - ipv6
                - metadata
                - install_agent
                - storage
                - image_transfer
              available: true
              sizes:
                - s-1vcpu-1gb
                - s-1vcpu-2gb
                - s-1vcpu-3gb
                - s-2vcpu-2gb
                - s-3vcpu-1gb
                - s-2vcpu-4gb
                - s-4vcpu-8gb
                - s-6vcpu-16gb
                - s-8vcpu-32gb
                - s-12vcpu-48gb
                - s-16vcpu-64gb
                - s-20vcpu-96gb
                - s-24vcpu-128gb
                - s-32vcpu-192g
            tags:
              - web
              - "env:prod"
        links:
          actions:
            - id: 7515
              rel: create
              href: "https://api.digitalocean.com/v2/actions/7515"
            - id: 7516
              rel: create
              href: "https://api.digitalocean.com/v2/actions/7516"
    droplet_single:
      value:
        droplet:
          id: 3164444
          name: example.com
          memory: 1024
          vcpus: 1
          disk: 25
          locked: false
          status: active
          kernel: null
          created_at: "2020-07-21T18:37:44Z"
          features:
            - backups
            - private_networking
            - ipv6
          backup_ids:
            - 53893572
          next_backup_window:
            start: "2020-07-30T00:00:00Z"
            end: "2020-07-30T23:00:00Z"
          snapshot_ids:
            - 67512819
          image:
            id: 63663980
            name: 20.04 (LTS) x64
            distribution: Ubuntu
            slug: ubuntu-20-04-x64
            public: true
            regions:
              - ams2
              - ams3
              - blr1
              - fra1
              - lon1
              - nyc1
              - nyc2
              - nyc3
              - sfo1
              - sfo2
              - sfo3
              - sgp1
              - tor1
            created_at: "2020-05-15T05:47:50Z"
            type: snapshot
            min_disk_size: 20
            size_gigabytes: 2.36
            description: ""
            tags: []
            status: available
            error_message: ""
          volume_ids: []
          size:
            slug: s-1vcpu-1gb
            memory: 1024
            vcpus: 1
            disk: 25
            transfer: 1
            price_monthly: 5
            price_hourly: 0.00743999984115362
            regions:
              - ams2
              - ams3
              - blr1
              - fra1
              - lon1
              - nyc1
              - nyc2
              - nyc3
              - sfo1
              - sfo2
              - sfo3
              - sgp1
              - tor1
            available: true
            description: Basic
          size_slug: s-1vcpu-1gb
          networks:
            v4:
              - ip_address: 10.128.192.124
                netmask: 255.255.0.0
                gateway: nil
                type: private
              - ip_address: 192.241.165.154
                netmask: 255.255.255.0
                gateway: 192.241.165.1
                type: public
            v6:
              - ip_address: "2604:a880:0:1010::18a:a001"
                netmask: 64
                gateway: "2604:a880:0:1010::1"
                type: public
          region:
            name: New York 3
            slug: nyc3
            features:
              - private_networking
              - backups
              - ipv6
              - metadata
              - install_agent
              - storage
              - image_transfer
            available: true
            sizes:
              - s-1vcpu-1gb
              - s-1vcpu-2gb
              - s-1vcpu-3gb
              - s-2vcpu-2gb
              - s-3vcpu-1gb
              - s-2vcpu-4gb
              - s-4vcpu-8gb
              - s-6vcpu-16gb
              - s-8vcpu-32gb
              - s-12vcpu-48gb
              - s-16vcpu-64gb
              - s-20vcpu-96gb
              - s-24vcpu-128gb
              - s-32vcpu-192g
          tags:
            - web
            - "env:prod"
          vpc_uuid: 760e09ef-dc84-11e8-981e-3cfdfeaae000
security:
  - bearer_auth: []
