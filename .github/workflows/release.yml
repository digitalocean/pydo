name: tagged-release

on:
  push:
    tags:
      - "v[0-9].[0-9]+.[0-9]+"

jobs:
  build-and-publish:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2.5.0

      - name: Install Poetry
        uses: snok/install-poetry@v1.3.1
        with:
          version: 1.1.13
          virtualenvs-path: .venv
          virtualenvs-create: true
          virtualenvs-in-project: true
          installer-parallel: false

      - name: Restore poetry cache
        if: success() && !env.ACT
        uses: actions/cache@v3
        with:
          path: $(poetry config cache-dir)
          key: ubuntu-latest-poetry-${{ matrix.python-version }}-${{ hashFiles('**/pyproject.toml') }}

      - name: Build
        run: poetry build

      - name: Upload a Build Artifacts
        uses: actions/upload-artifact@v3.1.1
        with:
          name: dist
          path: dist/

      - name: Publish
        run: poetry publish

  release:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2.5.0

      - name: Download the Build Artifacts
        uses: actions/download-artifact@v3.1.1
        with:
          name: dist
          path: dist/

      - name: Create release
        run: |
          gh release create ${{ env.TAG }} /
            dist/*
            --title "${{ env.TAG }}" /
            --generate-notes /
            --draft
        env:
          TAG: ${GITHUB_REF#refs/*/}
          POETRY_PYPI_TOKEN_PYPI: ${{ secrets.PYPI_TOKEN }}
